ggplot2::ggplot(data = ChickWeight,
+                 aes(x = Time,
+                     y = cbind(resid(lr)))) +
+     geom_jitter(size = 3, col = "red", alpha = 0.5) +
+     labs(y = "Residuals",
+          title = "Residuals vs Time", subtitle = "Independence")
lr_coll <- lm(Time~Diet, data=ChickWeight)
rsq <- summary(lr_coll)$r.squared
rsq
sqrt(rsq)
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
hugo mod clean
hugo mod tidy
blogdown:::serve_site()
blogdown:::serve_site()
hugo mod clean
blogdown:::serve_site()
blogdown:::serve_site()
hugo server
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
ci <- dplyr::add_rownames(data.frame(ci), "Term")
tibble::rownames_to_column(data.frame(ci), "Term")
set.seed(88)  # I set the seed when the generation of new data is involved
# otherwise the estimate will be different every time
ci <- confint(m1, method="boot", nsim=10)
# install.package("tibble")
ci <- tibble::rownames_to_column(data.frame(ci), "Term")
data("sleepstudy")
# install.packages("lmerTest")
# install.packages("ggplot2")
# install.packages("knitr")
library(lmerTest)
library(ggplot2)
library(knitr)
opts_template$set(figure_small = list(fig.height = 4, fig.width = 6))
m1 <- lmer(Reaction #this is the dependent variable
~ Days + #this is the fixed term: the effect we are mostly
# interested in!
( 1 + Days | Subject), #This expression means:
# each Subject has their baseline RT
# (intercept) and an individual variation
# of RT between Days (slope) --> varying
# intercept and slope
data=sleepstudy)
set.seed(88)  # I set the seed when the generation of new data is involved
# otherwise the estimate will be different every time
ci <- confint(m1, method="boot", nsim=10)
# install.package("tibble")
ci <- tibble::rownames_to_column(data.frame(ci), "Term")
colnames(ci) <- c("Term", "CI 2.5%", "CI 97.5%")
knitr::kable(ci[5:6,])
fe
coef(m1)$Subject
fe <- coef(m1)$Subject
fe <- add_rownames(data.frame(fe),"Subject")
fe <- tibble::rownames_to_column(data.frame(fe),"Subject")
fe$X.Intercept.
fixef(m1)[1]
fe <- coef(m1)$Subject
fe <- tibble::rownames_to_column(data.frame(fe),"Subject")
sub <- filter(sleepstudy, Subject=="309")
ggplot(data=sub, aes(x=Days, y=Reaction)) +
geom_jitter(size=2, alpha=0.5) +
geom_abline(intercept=fe$X.Intercept.[1],
slope=fe$Days[1]) +
geom_abline(intercept=fixef(m1)[1],
slope=fixef(m1)[2], linetype="dashed") +
labs(title="Observations and RL of Subject 308 compared to the Avg RL",
caption="____ Individual Regression Line - - - - Avg Regression Line") +
scale_x_continuous(breaks = c(0,2,4,6,8))
sub <- filter(sleepstudy, Subject=="309")
fe <- coef(m1)$Subject
fe <- tibble::rownames_to_column(data.frame(fe),"Subject")
fe
subset(sleepstudy, Subject=="309")
fe
ggplot(data=sub, aes(x=Days, y=Reaction)) +
geom_jitter(size=2, alpha=0.5) +
geom_abline(intercept=fe$X.Intercept.[2],
slope=fe$Days[2]) +
geom_abline(intercept=fixef(m1)[1],
slope=fixef(m1)[2], linetype="dashed") +
labs(title="Observations and RL of Subject 308 compared to the Avg RL",
caption="____ Individual Regression Line - - - - Avg Regression Line") +
scale_x_continuous(breaks = c(0,2,4,6,8))
sub <- subset(sleepstudy, Subject=="309")
ggplot(data=sub, aes(x=Days, y=Reaction)) +
geom_jitter(size=2, alpha=0.5) +
geom_abline(intercept=fe$X.Intercept.[2],
slope=fe$Days[2]) +
geom_abline(intercept=fixef(m1)[1],
slope=fixef(m1)[2], linetype="dashed") +
labs(title="Observations and RL of Subject 308 compared to the Avg RL",
caption="____ Individual Regression Line - - - - Avg Regression Line") +
scale_x_continuous(breaks = c(0,2,4,6,8))
fixef(m1)[1]
ggplot(data=sub, aes(x=Days, y=Reaction)) +
geom_jitter(size=2, alpha=0.5) +
geom_abline(intercept=fe$X.Intercept.[2],
slope=fe$Days[2]) +
geom_abline(intercept=fixef(m1)[1],
slope=fixef(m1)[2], linetype="dashed") +
labs(title="Observations and RL of Subject 309 compared to the Avg RL",
caption="____ Individual Regression Line - - - - Avg Regression Line") +
scale_x_continuous(breaks = c(0,2,4,6,8)) +
ylim(200,250)
ggplot(data=sub, aes(x=Days, y=Reaction)) +
geom_jitter(size=2, alpha=0.5) +
geom_abline(intercept=fe$X.Intercept.[2],
slope=fe$Days[2]) +
geom_abline(intercept=fixef(m1)[1],
slope=fixef(m1)[2], linetype="dashed") +
labs(title="Observations and RL of Subject 309 compared to the Avg RL",
caption="____ Individual Regression Line - - - - Avg Regression Line") +
scale_x_continuous(breaks = c(0,2,4,6,8)) +
ylim(200,300)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
knitr::kable(coef(summary(m1)))
m2 <- lmer(Reaction
~ Days * lunch +
( 1 + Days | Subject),
data=sleepstudy)
knitr::kable(coef(summary(m2)))
data("sleepstudy")
# install.packages("lmerTest")
# install.packages("ggplot2")
# install.packages("knitr")
library(lmerTest)
library(ggplot2)
library(knitr)
opts_template$set(figure_small = list(fig.height = 4, fig.width = 6))
m2 <- lmer(Reaction
~ Days * lunch +
( 1 + Days | Subject),
data=sleepstudy)
knitr::kable(coef(summary(m2)))
set.seed(88)
lunch <- sample(c(0,1), replace=TRUE, size=18)
sleepstudy$lunch <- factor(lunch)
head(sleepstudy)
knitr::kable(head(sleepstudy))
m2 <- lmer(Reaction
~ Days * lunch +
( 1 + Days | Subject),
data=sleepstudy)
knitr::kable(coef(summary(m2)))
knitr::kable((coef(m1)$Subject))
knitr::kable((coef(m2)$Subject))
(250.39 + 2.72) + (10.70 - 0.62)*1
(250.39) + (10.70)*1
(250.39 + 2.72) + (10.70 - 0.62)*9
(250.39) + (10.70)*9
ggplot(data=sleepstudy,
aes(x=Days, y=Reaction, col=lunch)) +
geom_jitter() +
geom_abline(intercept = 250.39 + 2.72, slope = 10.70 - 0.62,
linetype="dashed") +
geom_abline(intercept = 250.39, slope = 10.70) +
labs(title="Model with interaction Days:lunch",
caption="___ No Lunch \n - - - With Lunch") +
scale_x_continuous(breaks = c(0,2,4,6,8))
qqnorm(resid(m1)) ; qqline(resid(m2), col="red")
qqnorm(resid(m2)) ; qqline(resid(m2), col="red")
ggplot(data = sleepstudy, aes(x = predict(m2), y = cbind(resid(m2)))) +
geom_point(size = 3, col = "red", alpha = 0.6) +
geom_abline(slope = 0,
intercept = 0,
col = "gray") +
labs(x = "Fitted Values", y = "Residuals",
title = "Residuals vs Fitted",
subtitle = "Homogeneity") +
coord_fixed()
hist(resid(m2), main = "Histogram of Residuals (normality)",
xlab = "Residuals", col = "red")
ggplot(data = sleepstudy, aes(x = Days, y = cbind(resid(m2)))) +    geom_jitter(size = 3, col = "red", alpha = 0.5) +
labs(y = "Residuals", title = "Residuals vs Days",
subtitle = "Independence") +
scale_x_continuous(breaks = c(0,2,4,6,8))
ggplot(data = sleepstudy, aes(x = lunch, y = cbind(resid(m2)))) +
geom_boxplot(fill = "red", alpha = 0.5) +
labs(y = "Residuals",
title = "Residuals vs Lunch",
subtitle = "Independence")
ggplot(data = sleepstudy, aes(x = lunch, y = cbind(resid(m2)))) +
geom_jitter(fill = "red", alpha = 0.5) +
labs(y = "Residuals",
title = "Residuals vs Lunch",
subtitle = "Independence")
ggplot(data = sleepstudy, aes(x = lunch, y = cbind(resid(m2)))) +
geom_jitter(size = 3, col = "red", alpha = 0.6) +
labs(y = "Residuals",
title = "Residuals vs Lunch",
subtitle = "Independence")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::update_meta_addin()
install.packages("gitcreds")
library(gitcreds)
gitcreds_set()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
library(lme4) #initialise the libraries containing the functions that we need
library(dplyr)
data("sleepstudy") # initialise the dataset
set.seed(7) #setting the seed to we sample the same row numbers
missing <- sample_n(sleepstudy, 18, weight = Reaction) %>%
arrange(Subject)
sleepstudy <- sleepstudy %>%
anti_join(missing, by = c("Reaction", "Days", "Subject"))
sleepstudy
head(sleepstudy)
knitr::kable(head(sleepstudy))
lm_nslr <-lm(Reaction ~ Days + Subject - 1, data=sleepstudy)
coef <- summary(lm_nslr)$coefficients
coef.lm_nslr <- rbind(data.frame(Subject=gsub(pattern="Subject",
replacement="",
x=rownames(coef[-1,])),
Intercept=coef[-1,1],
St.er.int=coef[-1,2],
Method="n-slr"))
rownames(coef.lm_nslr) <- NULL
knitr::kable(head(coef.lm_nslr))
coef.lm_islr <- data.frame()
ids <- unique(sleepstudy$Subject)
for (i in 1:length(ids))
{
d.s = subset(sleepstudy, Subject==ids[i])
if (is.nan(mean(d.s$Days, na.rm=T)))
{
coef.lm_islr = rbind(coef.lm_islr, data.frame(Subject=(ids[i]),
Intercept=NA, St.er.int=NA, Method="i-slr"))
}
else
{
lm_islr = lm(Reaction ~ Days, data=d.s)
coef = summary(lm_islr)$coefficients
coef.lm_islr = rbind(coef.lm_islr, data.frame(Subject=(ids[i]),
Intercept=coef[1,1], St.er.int=coef[1,2], Method="i-slr"))
}
}
knitr::kable(head(coef.lm_islr))
lm_mm <- lmer(Reaction ~ Days + (1|Subject), data=sleepstudy)
coef <- coef(lm_mm)$Subject$'(Intercept)'
err <- ranef(lm_mm)$Subject$'(Intercept)'
coef.mm <- rbind(data.frame(Subject=rownames(coef(lm_mm)$Subject),
Intercept=coef, St.er.int=err, Method="mm"))
knitr::kable(head(coef))
knitr::kable(head(coef.mm))\
knitr::kable(head(coef.mm))
sleepstudy
sleepstudy %>%
# group_by(Subject) %>%
# # filter(ID=="100693509718" | ID=="101129844643") %>%
# summarise(N=n(),
#           m.Reaction=mean(Reaction, na.rm=T),
#           sd.Reaction=sd(Reaction, na.rm=T)) %>%
filter(Day==0) %>%
left_join(all_coef) %>%
mutate(Method=factor(Method, levels = c("n-slr", "i-slr", "mm")))
sleepstudy
sleepstudy %>%
# group_by(Subject) %>%
# # filter(ID=="100693509718" | ID=="101129844643") %>%
# summarise(N=n(),
#           m.Reaction=mean(Reaction, na.rm=T),
#           sd.Reaction=sd(Reaction, na.rm=T)) %>%
filter(Days==0) %>%
left_join(all_coef)
all_coef <- rbind(coef.lm_nslr, coef.lm_islr, coef.mm)
sleepstudy %>%
# group_by(Subject) %>%
# # filter(ID=="100693509718" | ID=="101129844643") %>%
# summarise(N=n(),
#           m.Reaction=mean(Reaction, na.rm=T),
#           sd.Reaction=sd(Reaction, na.rm=T)) %>%
filter(Days==0) %>%
left_join(all_coef) %>%
mutate(Method=factor(Method, levels = c("n-slr", "i-slr", "mm")))
bs_data <- sleepstudy %>%
filter(Days==0) %>%
left_join(all_coef) %>%
mutate(Method=factor(Method, levels = c("n-slr", "i-slr", "mm")))
bs_data
all_coef
gp_data <- sleepstudy %>%
group_by(Subject) %>%
summarise(N=n())
m.er.int <- all_coef %>%
group_by("Method") %>%
summarise(m.er.int=mean(St.er.int))
bs_data %>%
left_join(gp_data, by="Subject") %>%
left_join(m.er.int, by="Method")
bs_data
m.er.int
all_coef
all_coef %>%
group_by("Method") %>%
summarise(m.er.int=mean(St.er.int))
m.er.int <- all_coef %>%
group_by(Method) %>%
summarise(m.er.int=mean(St.er.int))
m.er.int
bs_data %>%
left_join(gp_data, by="Subject") %>%
left_join(m.er.int, by="Method")
bs_data_p <- bs_data %>%
left_join(gp_data, by="Subject") %>%
left_join(m.er.int, by="Method")
mutate(er.st.int=ifelse(St.er.int>1.9*m.er.int, "above 2 std. er",
ifelse(St.er.int>m.er.int & St.er.int<1.9*m.er.int, "within 1 std. err",
ifelse(St.er.int<m.er.int & St.er.int>-1.9*m.er.int, "within 1 std. err",
ifelse(St.er.int<-1.9*m.er.int, "below 2 std. er",))))) %>%
mutate(er.st.int=factor(er.st.int, levels = c("above 2 std. er", "within 1 std. err", "below 2 std. er")))
bs_data %>%
left_join(gp_data, by="Subject") %>%
left_join(m.er.int, by="Method") %>%
mutate(er.st.int=ifelse(St.er.int>1.9*m.er.int, "above 2 std. er",
ifelse(St.er.int>m.er.int & St.er.int<1.9*m.er.int, "within 1 std. err",
ifelse(St.er.int<m.er.int & St.er.int>-1.9*m.er.int, "within 1 std. err",
ifelse(St.er.int<-1.9*m.er.int, "below 2 std. er",))))) %>%
mutate(er.st.int=factor(er.st.int, levels = c("above 2 std. er", "within 1 std. err", "below 2 std. er")))
knitr::kable(head(bs_data_p))
ggplot(data=(gp_data),
aes(x=m.Reaction, y=Intercept,
fill=Subject)) +
facet_grid(~Method) +
geom_errorbar(aes(x=m.Reaction,
ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int),
position=position_dodge(2)) +
geom_jitter(aes(size=N), shape=21) +
scale_radius() +
scale_fill_manual(values=fill1) +
scale_color_manual(values=c("firebrick1", "black", "darkorange")) +
guides(fill = "none") +
coord_cartesian(ylim=c(150, 350)) +
theme_bw()
library(RColorBrewer)
set.seed(7)
n <- length(unique(sleepstudy$Subject))
fill <- grDevices::colors()
fill1 <- sample(fill, n)
library(ggplot2)
ggplot(data=(gp_data),
aes(x=m.Reaction, y=Intercept,
fill=Subject)) +
facet_grid(~Method) +
geom_errorbar(aes(x=m.Reaction,
ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int),
position=position_dodge(2)) +
geom_jitter(aes(size=N), shape=21) +
scale_radius() +
scale_fill_manual(values=fill1) +
scale_color_manual(values=c("firebrick1", "black", "darkorange")) +
guides(fill = "none") +
coord_cartesian(ylim=c(150, 350)) +
theme_bw()
ggplot(data=(gp_data),
aes(x=m.Reaction, y=Intercept,
fill=Subject)) +
facet_grid(~Method) +
geom_errorbar(aes(x=m.Reaction,
ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int),
position=position_dodge(2))
ggplot(data=(bs_data_p),
aes(x=m.Reaction, y=Intercept,
fill=Subject)) +
facet_grid(~Method) +
geom_errorbar(aes(x=m.Reaction,
ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int),
position=position_dodge(2)) +
geom_jitter(aes(size=N), shape=21) +
scale_radius() +
scale_fill_manual(values=fill1) +
scale_color_manual(values=c("firebrick1", "black", "darkorange")) +
guides(fill = "none") +
coord_cartesian(ylim=c(150, 350)) +
theme_bw()
ggplot(data=(bs_data_p),
aes(x=Reaction, y=Intercept,
fill=Subject)) +
facet_grid(~Method) +
geom_errorbar(aes(x=Reaction,
ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int),
position=position_dodge(2)) +
geom_jitter(aes(size=N), shape=21) +
scale_radius() +
scale_fill_manual(values=fill1) +
scale_color_manual(values=c("firebrick1", "black", "darkorange")) +
guides(fill = "none") +
coord_cartesian(ylim=c(150, 350)) +
theme_bw()
bs_data_p <- bs_data %>%
left_join(gp_data, by="Subject") %>%
left_join(m.er.int, by="Method") %>%
mutate(er.st.int=ifelse(St.er.int>1.9*m.er.int, "above 2 std. er",
ifelse(St.er.int>m.er.int & St.er.int<1.9*m.er.int, "within 1 std. err",
ifelse(St.er.int<m.er.int & St.er.int>-1.9*m.er.int, "within 1 std. err",
ifelse(St.er.int<-1.9*m.er.int, "below 2 std. er",))))) %>%
mutate(er.st.int=factor(er.st.int, levels = c("above 2 std. er", "within 1 std. err", "below 2 std. er")))
knitr::kable(head(bs_data_p))
knitr::kable(head(bs_data_p))
ggplot(data=(bs_data_p),
aes(x=Reaction, y=Intercept,
fill=Subject)) +
facet_grid(~Method) +
geom_errorbar(aes(x=Reaction,
ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int),
position=position_dodge(2)) +
geom_jitter(aes(size=N), shape=21) +
scale_radius() +
scale_fill_manual(values=fill1) +
scale_color_manual(values=c("firebrick1", "black", "darkorange")) +
guides(fill = "none") +
coord_cartesian(ylim=c(150, 350)) +
theme_bw()
bs_data_p <- bs_data %>%
left_join(gp_data, by="Subject") %>%
left_join(m.er.int, by="Method") %>%
mutate(er.st.int=ifelse(St.er.int>1.9*m.er.int, "above 2 std. er",
ifelse(St.er.int>m.er.int & St.er.int<1.9*m.er.int, "within 1 std. err",
ifelse(St.er.int<m.er.int & St.er.int>-1.9*m.er.int, "within 1 std. err",
ifelse(St.er.int<-1.9*m.er.int, "below 2 std. er",))))) %>%
mutate(er.st.int=factor(er.st.int, levels = c("above 2 std. er", "within 1 std. err", "below 2 std. er"))) %>%
mutate(Method=factor(Method, levels = c("n-slr", "i-slr", "mm")))
ggplot(data=(bs_data_p),
aes(x=Reaction, y=Intercept,
fill=Subject)) +
facet_grid(~Method) +
geom_errorbar(aes(x=Reaction,
ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int),
position=position_dodge(2)) +
geom_jitter(aes(size=N), shape=21) +
scale_radius() +
scale_fill_manual(values=fill1) +
scale_color_manual(values=c("firebrick1", "black", "darkorange")) +
guides(fill = "none") +
coord_cartesian(ylim=c(150, 350)) +
theme_bw()
ggplot(bs_data_p,
aes(x=N, y=Intercept,
fill=Subject)) +
geom_errorbar(position=position_dodge(5),
aes(ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int, group=Subject)) +
geom_point(size=3, position=position_dodge(5), shape=23) +
guides(fill = "none") +
scale_fill_manual(values = fill1) +
scale_color_manual(values=c("firebrick1", "black", "darkorange")) +
facet_wrap(~Method) +
theme_bw()
ggplot(bs_data_p,
aes(x=N, y=Intercept,
fill=Subject)) +
geom_errorbar(position=position_dodge(5),
aes(ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int, group=Subject)) +
geom_point(size=3, position=position_dodge(5), shape=23) +
guides(fill = "none") +
scale_fill_manual(values = fill1) +
scale_color_manual(values=c("firebrick1", "black", "darkorange")) +
scale_x_continuous(breaks = c(5:10)) +
facet_wrap(~Method) +
theme_bw()
blogdown:::serve_site()
