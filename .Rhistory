paste(round(`Pr(>|z|)`,
4)))))) %>%
mutate_if(is.numeric, funs(round(.,
digits=2)))
mtests <- mtests %>%
tibble::rownames_to_column("Parameters") %>%
mutate(`Pr(>|z|)`=ifelse(`Pr(>|z|)`< 0.001,
"< 0.001",
ifelse(`Pr(>|z|)` < 0.01,
"< 0.01",
ifelse(`Pr(>|z|)` < 0.05,
"< 0.05",
paste(round(`Pr(>|z|)`,
4)))))) %>%
mutate_if(is.numeric, funs(round(.,
digits=2)))
pname <- switch(comparisons$alternativ,
less = paste("Pr(<",
ifelse(comparisons$df ==0, "z", "t"), ")",
sep = ""),
greater = paste("Pr(>",
ifelse(comparisons$df == 0, "z", "t"), ")",
sep = ""),
two.sided = paste("Pr(>|",
ifelse(comparisons$df == 0, "z", "t"), "|)"
, sep = ""))
colnames(mtests) <- c("Estimate", "Std.Error",
ifelse(comparisons$df ==0, "zvalue", "tvalue"), pname)
mtests <- mtests %>%
tibble::rownames_to_column("Parameters") %>%
mutate(`Pr(>|z|)`=ifelse(`Pr(>|z|)`< 0.001,
"< 0.001",
ifelse(`Pr(>|z|)` < 0.01,
"< 0.01",
ifelse(`Pr(>|z|)` < 0.05,
"< 0.05",
paste(round(`Pr(>|z|)`,
4)))))) %>%
mutate_if(is.numeric, funs(round(.,
digits=2)))
mtests %>%
tibble::rownames_to_column("Parameters")
mtests
data.frame(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
comparisons$alternativ
comparisons$df
pname
colnames(mtests)
mtests
pq <- comparisons$test
mtests <- data.frame(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
error <- attr(pq$pvalues, "error")
pname <- switch(comparisons$alternativ,
less = paste("Pr(<",
ifelse(comparisons$df ==0, "z", "t"), ")",
sep = ""),
greater = paste("Pr(>",
ifelse(comparisons$df == 0, "z", "t"), ")",
sep = ""),
two.sided = paste("Pr(>|",
ifelse(comparisons$df == 0, "z", "t"), "|)"
, sep = ""))
colnames(mtests) <- c("Comparison", "Estimate", "Std.Error",
ifelse(comparisons$df ==0, "zvalue", "tvalue"), pname)
colnames(mtests)
colnames(mtests) <- c("Estimate", "Std.Error",
ifelse(comparisons$df ==0, "zvalue", "tvalue"), pname)
mtests
mtests %>%
tibble::rownames_to_column("Parameters")
mtests %>%
tibble::rownames_to_column("Comparison") %>%
mutate(`Pr(>|z|)`=ifelse(`Pr(>|z|)`< 0.001,
"< 0.001",
ifelse(`Pr(>|z|)` < 0.01,
"< 0.01",
ifelse(`Pr(>|z|)` < 0.05,
"< 0.05",
paste(round(`Pr(>|z|)`,
4)))))) %>%
mutate_if(is.numeric, funs(round(.,
digits=2)))
kable(mtests)
blogdown:::serve_site()
blogdown:::new_post_addin()
set.seed(88)
lunch <- sample(c(0,1), replace=TRUE, size=18)
sleepstudy$lunch <- factor(lunch)
kable(head(sleepstudy))
data("sleepstudy")
# Load packages
packs <- c("lmerTest", "knitr", "multcomp", "dplyr", "ggplot2")
lapply(packs, require, character.only = TRUE)
set.seed(88)
lunch <- sample(c(0,1), replace=TRUE, size=18)
sleepstudy$lunch <- factor(lunch)
kable(head(sleepstudy))
# Change the data type of Days from number (continous) to factor (categorical)
sleepstudy$Days <- factor(as.character(sleepstudy$Days),
levels = unique(sleepstudy$Days))
levels(sleepstudy$Days)
# Fit the model
m <- lmer(Reaction ~ Days*lunch - 1 + ( 1 | Subject), data=sleepstudy)
kable(coef(summary(m)))
group <- paste0(sleepstudy$Days, sleepstudy$lunch)
group <- aggregate(model.matrix(m) ~ group, FUN=mean)
# group
rownames(group) <- group$group
(group <- group[,-1])
kable(group)
kable(group)
kable(head(group))
blogdown:::serve_site()
contrasts <- rbind(group["01",] - group["00",],
group["11",] - group["10",],
group["21",] - group["20",],
group["31",] - group["30",],
group["41",] - group["40",],
group["51",] - group["50",],
group["61",] - group["60",],
group["71",] - group["70",],
group["81",] - group["80",],
group["91",] - group["90",])
kable(head(contrasts))
kable((contrasts))
group
contrasts <- rbind(group["00",] - group["01",],
group["11",] - group["10",],
group["21",] - group["20",],
group["31",] - group["30",],
group["41",] - group["40",],
group["51",] - group["50",],
group["61",] - group["60",],
group["71",] - group["70",],
group["81",] - group["80",],
group["91",] - group["90",])
kable((contrasts))
contrasts <- rbind(group["00",] - group["01",],
group["10",] - group["11",],
group["20",] - group["21",],
group["30",] - group["31",],
group["40",] - group["41",],
group["50",] - group["51",],
group["60",] - group["61",],
group["70",] - group["71",],
group["80",] - group["81",],
group["90",] - group["91",])
kable(head(contrasts))
# Transform into Matrix
contrast.matrix <- rbind("Lunch vs No Lunch on Day 0"=as.numeric(contrasts[1,]),
"Lunch vs No Lunch on Day 1"=as.numeric(contrasts[2,]),
"Lunch vs No Lunch on Day 2"=as.numeric(contrasts[3,]),
"Lunch vs No Lunch on Day 3"=as.numeric(contrasts[4,]),
"Lunch vs No Lunch on Day 4"=as.numeric(contrasts[5,]),
"Lunch vs No Lunch on Day 5"=as.numeric(contrasts[6,]),
"Lunch vs No Lunch on Day 6"=as.numeric(contrasts[7,]),
"Lunch vs No Lunch on Day 7"=as.numeric(contrasts[8,]),
"Lunch vs No Lunch on Day 8"=as.numeric(contrasts[8,]),
"Lunch vs No Lunch on Day 9"=as.numeric(contrasts[8,])
)
comparisons <- summary(glht(m, contrast.matrix))
comparisons
pq <- comparisons$test
mtests <- data.frame(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
error <- attr(pq$pvalues, "error")
pname <- switch(comparisons$alternativ,
less = paste("Pr(<",
ifelse(comparisons$df ==0, "z", "t"), ")",
sep = ""),
greater = paste("Pr(>",
ifelse(comparisons$df == 0, "z", "t"), ")",
sep = ""),
two.sided = paste("Pr(>|",
ifelse(comparisons$df == 0, "z", "t"), "|)"
, sep = ""))
colnames(mtests) <- c("Estimate", "Std.Error",
ifelse(comparisons$df ==0, "zvalue", "tvalue"), pname)
mtests <- mtests %>%
tibble::rownames_to_column("Comparison") %>%
mutate(`Pr(>|z|)`=ifelse(`Pr(>|z|)`< 0.001,
"< 0.001",
ifelse(`Pr(>|z|)` < 0.01,
"< 0.01",
ifelse(`Pr(>|z|)` < 0.05,
"< 0.05",
paste(round(`Pr(>|z|)`,
4)))))) %>%
mutate_if(is.numeric, funs(round(.,
digits=2)))
kable(mtests)
contrasts <- rbind(group["11",] - group["01",],
group["11",] - group["11",],
group["11",] - group["21",],
group["11",] - group["31",],
group["11",] - group["41",],
group["11",] - group["51",],
group["11",] - group["61",],
group["11",] - group["71",],
group["11",] - group["81",],
group["11",] - group["91",])
kable(head(contrasts))
contrast.matrix <- rbind("Lunch Day 0 vs Day 1"=as.numeric(contrasts[1,]),
"Lunch Day 1 vs Day 1"=as.numeric(contrasts[2,]),
"Lunch Day 2 vs Day 1"=as.numeric(contrasts[3,]),
"Lunch Day 3 vs Day 1"=as.numeric(contrasts[4,]),
"Lunch Day 4 vs Day 1"=as.numeric(contrasts[5,]),
"Lunch Day 5 vs Day 1"=as.numeric(contrasts[6,]),
"Lunch Day 6 vs Day 1"=as.numeric(contrasts[7,]),
"Lunch Day 7 vs Day 1"=as.numeric(contrasts[8,]),
"Lunch Day 8 vs Day 1"=as.numeric(contrasts[8,]),
"Lunch Day 9 vs Day 1"=as.numeric(contrasts[8,])
)
comparisons <- summary(glht(m, contrast.matrix))
comparisons
contrasts
contrasts <- rbind(group["11",] - group["01",],
group["11",] - group["21",],
group["11",] - group["31",],
group["11",] - group["41",],
group["11",] - group["51",],
group["11",] - group["61",],
group["11",] - group["71",],
group["11",] - group["81",],
group["11",] - group["91",])
kable(head(contrasts))
contrast.matrix <- rbind("Lunch Day 0 vs Day 1"=as.numeric(contrasts[1,]),
"Lunch Day 2 vs Day 1"=as.numeric(contrasts[3,]),
"Lunch Day 3 vs Day 1"=as.numeric(contrasts[4,]),
"Lunch Day 4 vs Day 1"=as.numeric(contrasts[5,]),
"Lunch Day 5 vs Day 1"=as.numeric(contrasts[6,]),
"Lunch Day 6 vs Day 1"=as.numeric(contrasts[7,]),
"Lunch Day 7 vs Day 1"=as.numeric(contrasts[8,]),
"Lunch Day 8 vs Day 1"=as.numeric(contrasts[8,]),
"Lunch Day 9 vs Day 1"=as.numeric(contrasts[8,])
)
comparisons <- summary(glht(m, contrast.matrix))
comparisons
pq <- comparisons$test
mtests <- data.frame(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
error <- attr(pq$pvalues, "error")
pname <- switch(comparisons$alternativ,
less = paste("Pr(<",
ifelse(comparisons$df ==0, "z", "t"), ")",
sep = ""),
greater = paste("Pr(>",
ifelse(comparisons$df == 0, "z", "t"), ")",
sep = ""),
two.sided = paste("Pr(>|",
ifelse(comparisons$df == 0, "z", "t"), "|)"
, sep = ""))
colnames(mtests) <- c("Estimate", "Std.Error",
ifelse(comparisons$df ==0, "zvalue", "tvalue"), pname)
mtests <- mtests %>%
tibble::rownames_to_column("Comparison") %>%
mutate(`Pr(>|z|)`=ifelse(`Pr(>|z|)`< 0.001,
"< 0.001",
ifelse(`Pr(>|z|)` < 0.01,
"< 0.01",
ifelse(`Pr(>|z|)` < 0.05,
"< 0.05",
paste(round(`Pr(>|z|)`,
4)))))) %>%
mutate_if(is.numeric, funs(round(.,
digits=2)))
kable(mtests)
blogdown:::new_post_addin()
# install.packages("dplyr")
# install.packages("ggplot2")
# install.packages("lme4")
# install.packages("nlme")
# Load packages
packs <- c("dplyr", "ggplot2", "lme4", "nlme")
lapply(packs, require, character.only = TRUE)
# Load data
data("sleepstudy")
#generate categorical variable 'g'
set.seed(88)
sg <- data.frame()
sb <- unique(data$Subject)
for (i in 1:length(sb)) {
g = sample(LETTERS[c(6,13)], size = 1)
sg = rbind(sg, cbind(Subject=paste(sb[i]), G=g))
}
data
#generate categorical variable 'g'
set.seed(88)
sg <- data.frame()
sb <- unique(sleepstudy$Subject)
for (i in 1:length(sb)) {
g = sample(LETTERS[c(6,13)], size = 1)
sg = rbind(sg, cbind(Subject=paste(sb[i]), G=g))
}
sleepstudy <- inner_join(sleepstudy, sg, by="Subject")
View(sleepstudy)
LETTERS[c(6,13)
]
#generate categorical variable 'g'
set.seed(88)
sg <- data.frame()
sb <- unique(sleepstudy$Subject)
for (i in 1:length(sb)) {
g = sample(LETTERS[c(5,16)], size = 1)
sg = rbind(sg, cbind(Subject=paste(sb[i]), G=g))
}
sleepstudy <- inner_join(sleepstudy, sg, by="Subject")
data("sleepstudy")
#generate categorical variable 'g'
set.seed(88)
sg <- data.frame()
sb <- unique(sleepstudy$Subject)
for (i in 1:length(sb)) {
g = sample(LETTERS[c(5,16)], size = 1)
sg = rbind(sg, cbind(Subject=paste(sb[i]), G=g))
}
sleepstudy <- inner_join(sleepstudy, sg, by="Subject")
mean(sleepstudy$Reaction)
sample(1:8)
sleepstudy %>%
mutate(diff=Reaction-m)
m <- mean(sleepstudy$Reaction)
sleepstudy %>%
mutate(diff=Reaction-m)
sleepstudy %>%
mutate(diff=Reaction-m,
ndiff=ifelse(G=="E", diff-sample(5:15,1)))
sleepstudy %>%
mutate(diff=Reaction-m,
ndiff=ifelse(G=="E", diff-sample(5:15,1), diff))
sleepstudy %>%
mutate(diff=Reaction-m,
ndiff=ifelse(G=="E" & diff<0, diff+sample(5:15,1), ifelse(G=="E" & diff>0, diff-sample(5:15,1), diff)))
sleepstudy %>%
mutate(diff=Reaction-m,
ndiff=ifelse(G=="E" & diff<0, diff+sample(5:15,1), ifelse(G=="E" & diff>0, diff-sample(5:15,1), diff)),
nReaction=ndiff+m)
```{r}
#shift group E towards sample mean
m <- mean(sleepstudy$Reaction)
sleepstudy <- sleepstudy %>%
mutate(diff=Reaction-m,
ndiff=ifelse(G=="E" & diff<0, diff+sample(5:15,1), ifelse(G=="E" & diff>0, diff-sample(5:15,1), diff)),
nReaction=ndiff+m)
```
m <- mean(sleepstudy$Reaction)
set.seed(88)
sleepstudy <- sleepstudy %>%
mutate(diff=Reaction-m,
ndiff=ifelse(G=="E" & diff<0, diff+sample(5:15,1), ifelse(G=="E" & diff>0, diff-sample(5:15,1), diff)),
nReaction=ndiff+m)
sleepstudy %>%
ggplot(aes(y=nReaction, x=Days, group=Subject, color=G)) +
geom_path() +
labs(caption="")
sleepstudy %>%
ggplot(aes(y=nReaction, x=Days, group=Subject, color=G)) +
geom_point() +
labs(caption="")
sleepstudy %>%
ggplot(aes(y=nReaction, x=Days, group=Subject, color=G)) +
geom_point() +
geom_path()
sleepstudy %>%
ggplot(aes(y=nReaction, x=Days, group=Subject, color=G)) +
geom_point() +
geom_boxplot()
sleepstudy %>%
ggplot(aes(y=nReaction, x=as.factor(Days), group=Subject, color=G)) +
geom_point() +
geom_boxplot()
sleepstudy %>%
filter(group=="P") %>%
ggplot(aes(y=nReaction, x=as.factor(Days), group=Subject, color=G)) +
geom_point() +
geom_boxplot()
sleepstudy %>%
filter(G=="P") %>%
ggplot(aes(y=nReaction, x=as.factor(Days), group=Subject, color=G)) +
geom_point() +
geom_boxplot()
sleepstudy %>%
filter(G=="P") %>%
ggplot(aes(y=nReaction, x=as.factor(Days), color=G)) +
geom_point() +
geom_boxplot()
sleepstudy %>%
ggplot(aes(y=nReaction, x=as.factor(Days), color=G)) +
geom_boxplot() +
facet_wrap(~G)
#shift group E towards sample mean
m <- mean(sleepstudy$Reaction)
set.seed(88)
sleepstudy <- sleepstudy %>%
mutate(diff=Reaction-m,
ndiff=ifelse(G=="E" & diff<0, diff+sample(10:20,1), ifelse(G=="E" & diff>0, diff-sample(5:15,1), diff)),
nReaction=ndiff+m)
sleepstudy %>%
ggplot(aes(y=nReaction, x=as.factor(Days), color=G)) +
geom_boxplot() +
facet_wrap(~G)
sleepstudy %>%
ggplot(aes(y=nReaction, x=as.factor(Days), fill=G)) +
geom_boxplot() +
facet_wrap(~G) +
scale_fill_manual(values = c("orangered", "blue"))
sleepstudy %>%
ggplot(aes(y=nReaction, x=as.factor(Days), fill=G)) +
geom_boxplot() +
facet_wrap(~G) +
scale_fill_manual(values = c("orange", "cornflowerblue"))
#shift group E towards sample mean
m <- mean(sleepstudy$Reaction)
set.seed(88)
sleepstudy <- sleepstudy %>%
mutate(diff=Reaction-m,
ndiff=ifelse(G=="E" & diff<0, diff+sample(10:20,1), ifelse(G=="E" & diff>0, diff-sample(5:15,1), diff)),
nReaction=ndiff+m,
Days=as.factor(Days))
sleepstudy %>%
ggplot(aes(y=nReaction, x=Days, fill=G)) +
geom_boxplot() +
facet_wrap(~G) +
scale_fill_manual(values = c("orange", "cornflowerblue"))
model.hv = lme(fixed = nReaction ~ 1,
random = ~ 1 | Subject,
data = sleepstudy,
method = 'REML')
summary(model.hv)
VarCorr(model.hv)[1]
VarCorr(model.01)[2]
VarCorr(model.hv)[2]
getVarCov(model.hv, type="marginal")
kable(getVarCov(model.hv, type="marginal") )
packs <- c("dplyr", "ggplot2", "lme4", "nlme", "knitr")
lapply(packs, require, character.only = TRUE)
kable(getVarCov(model.hv, type="marginal") )
kable(getVarCov(model.hv, type="marginal", individuals=1) )
getVarCov(model.hv, type="marginal", individuals=1)
getVarCov(model.hv, type="marginal", individuals = 15)
as.numeric(VarCorr(model.01)[1])/as.numeric(VarCorr(model.01)[1])+as.numeric(VarCorr(model.01)[2])
as.numeric(VarCorr(model.hv)[1])/as.numeric(VarCorr(model.hv)[1])+as.numeric(VarCorr(model.hv)[2])
VarCorr(model.hv)[1]
VarCorr(model.hv)[1]
VarCorr(model.hv)[2]
as.numeric(VarCorr(model.hv)[1])/(as.numeric(VarCorr(model.hv)[1])+as.numeric(VarCorr(model.hv)[2]))
model.cs = lme(fixed = nReaction ~ 1,
random = list(Subject = pdSymm(form = ~ 1)),
data = sleepstudy,
method = 'REML')
rVarCorr(model.cs)[1]
VarCorr(model.cs)[1]
pdSymm(diag(rep(x = 1, times = 3)), nam = c("A","B","C"))
blogdown:::serve_site()
m_lmer <- lmer(nReaction ~ 1 + ( 1 | Subject), data=sleepstudy)
summary(m_lmer)
VarCorr(m_lmer)
getVarCov(m_lmer, type="marginal")
dd <- devfun2(m_lmer, useSc=TRUE)
pp <- attr(dd,"optimum")
sigpars <- pp[grepl("^\\.sig",names(pp))]
all.equal(unname(dd(sigpars)),deviance(refitML(m_lmer)))
all.equal(unname(dd(sigpars)),deviance(refitML(m_lmer)))
sigpars
unname(dd(sigpars)),deviance(refitML(m_lmer))
unname(dd(sigpars))
model.hv_ddm = lme(fixed = nReaction ~ 1,
random = list(Subject = pdDiag(form = ~ factor(G))),
data = sleepstudy,
method = 'REML')
summary(model.hv_ddm)
VarCorr(model.hv_ddm)
View(sleepstudy)
getVarCov(model.hv_ddm, type="marginal", individuals = c(1,3))
getVarCov(model.hv_ddm, type="marginal", individuals = c(1,3))
VarCorr(model.hv_ddm)[2]
2377 + 711.6750
3088.7 - 711.6750
blogdown:::serve_site()
model.hv_w = lme(fixed = Reaction ~ 1,
random = list(Subject = pdSymm(form = ~ 1)),
weights = varIdent(form = ~ 1 | Days),
data = sleepstudy,
method = 'REML')
summary(model.hv_w)
VarCorr(model.hv_w)
getVarCov(model.hv_w, type="marginal", individuals = c(1,3))
model.hv_w = lme(fixed = nReaction ~ 1,
random = list(Subject = pdSymm(form = ~ 1)),
weights = varIdent(form = ~ 1 | Days),
data = sleepstudy,
method = 'REML')
summary(model.hv_w)
model.hv_w = lme(fixed = nReaction ~ 1,
random = list(Subject = pdDiag(form = ~ factor(G))),
weights = varIdent(form = ~ 1 | Days),
data = sleepstudy,
method = 'REML')
summary(model.hv_w)
VarCorr(model.hv_w)
getVarCov(model.hv_w, type="marginal", individuals = c(1,3))
wss.v <- function(model) {
res.std = summary(model)$sigma #to re-scale the values
wts = coef(model$modelStruct$varStruct, unconstrained=FALSE)
res.v.g = (res.std*wts)^2
res.v = data.frame(res.v.g)
colnames(res.v) = "wss"
return(res.v)
}
wss.v(model.hv_w)
kable(wss.v(model.hv_w))
blogdown:::serve_site()
kable(cbind(1:9, wss.v(model.hv_w)))
kable(cbind(Days=1:9, wss.v(model.hv_w)))
