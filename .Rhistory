aes(x=N, y=Intercept,
fill=Subject)) +
geom_errorbar(position=position_dodge(5),
aes(ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int, group=Subject)) +
geom_point(size=3, position=position_dodge(5), shape=21) +
guides(fill = "none") +
scale_fill_manual(values = fill1) +
scale_color_manual(values=c("firebrick1", "black", "darkorange")) +
scale_x_continuous(breaks = c(5:10)) +
facet_wrap(~Method) +
theme_bw()
ggsave(filename = "test2.jpg", plot = p, dpi = 300)
bs_data <- sleepstudy %>%
filter(Days==0) %>%
left_join(all_coef, by="Subject")
gp_data <- sleepstudy %>%
group_by(Subject) %>%
summarise(N=n())
m.er.int <- all_coef %>%
group_by(Method) %>%
summarise(m.er.int=mean(St.er.int))
bs_data_p <- bs_data %>%
left_join(gp_data, by="Subject") %>%
left_join(m.er.int, by="Method") %>%
mutate(er.st.int=ifelse(St.er.int>1.9+m.er.int, "above 2 std. er",
ifelse(St.er.int>m.er.int & St.er.int<1.9+m.er.int, "within 1 std. err",
ifelse(St.er.int<m.er.int & St.er.int>-1.9+m.er.int, "within 1 std. err",
ifelse(St.er.int<-1.9+m.er.int, "below 2 std. er",))))) %>%
mutate(er.st.int=factor(er.st.int, levels = c("above 2 std. er", "within 1 std. err", "below 2 std. er"))) %>%
mutate(Method=factor(Method, levels = c("n-slr", "i-slr", "mm")))
knitr::kable(head(bs_data_p))
library(RColorBrewer)
set.seed(7)
n <- length(unique(sleepstudy$Subject))
fill <- grDevices::colors()
fill1 <- sample(fill, n)
ggplot(data=(bs_data_p),
aes(x=Reaction, y=Intercept,
fill=Subject)) +
facet_grid(~Method) +
geom_errorbar(aes(x=Reaction,
ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int),
position=position_dodge(2)) +
geom_jitter(aes(size=N), shape=21) +
scale_radius() +
scale_fill_manual(values=fill1) +
scale_color_manual(values=c("firebrick1", "black", "darkorange")) +
guides(fill = "none") +
coord_cartesian(ylim=c(150, 350)) +
theme_bw()
p <- ggplot(data=(bs_data_p),
aes(x=Reaction, y=Intercept,
fill=Subject)) +
facet_grid(~Method) +
geom_errorbar(aes(x=Reaction,
ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int),
position=position_dodge(2)) +
geom_jitter(aes(size=N), shape=21) +
scale_radius() +
scale_fill_manual(values=fill1) +
scale_color_manual(values=c("firebrick1", "black", "darkorange")) +
guides(fill = "none") +
coord_cartesian(ylim=c(150, 350)) +
theme_bw()
ggsave(filename = "test.jpg", plot = p, dpi=300)
p <- ggplot(bs_data_p,
aes(x=N, y=Intercept,
fill=Subject)) +
geom_errorbar(position=position_dodge(5),
aes(ymin=Intercept-St.er.int,
ymax=Intercept+St.er.int,
col=er.st.int, group=Subject)) +
geom_point(size=3, position=position_dodge(5), shape=21) +
guides(fill = "none") +
scale_fill_manual(values = fill1) +
scale_color_manual(values=c("firebrick1", "black", "darkorange")) +
scale_x_continuous(breaks = c(5:10)) +
facet_wrap(~Method) +
theme_bw()
ggsave(filename = "test2.jpg", plot = p, dpi=300)
View(bs_data_p)
```{r}
lm_nslr
```{r}
lm_nslr$coef
```{r}
lm_nslr$coef[-1]
```{r}
mean(lm_nslr$coef[-1])
```{r}
mean(lm_nslr$coef[-1])
lm_islr
```
```{r}
mean(lm_nslr$coef[-1])
lm_islr
```
```{r}
mean(lm_nslr$coef[-1])
lm_islr
```
lm_islr
coef.lm_islr
coef.lm_islr$Intercept
```{r}
mean(lm_nslr$coef[-1])
mean(coef.lm_islr$Intercept)
```
mean(coef.lm_islr$Intercept)
```{r}
mean(lm_nslr$coef[-1])
mean(coef.lm_islr$Intercept)
(coef.mm$Intercept)
```
```{r}
mean(lm_nslr$coef[-1])
mean(coef.lm_islr$Intercept)
mean(coef.mm$Intercept)
```
```{r}
rbind(mean(lm_nslr$coef[-1])
mean(coef.lm_islr$Intercept)
mean(coef.mm$Intercept))
```
rbind(mean(lm_nslr$coef[-1]),
mean(coef.lm_islr$Intercept),
mean(coef.mm$Intercept))
rbind(`n-slr'=mean(lm_nslr$coef[-1]),
mean(coef.lm_islr$Intercept),
mean(coef.mm$Intercept))
)
)
sdchbsdjhv
csjskjncsajn
rbind(`n-slr`=mean(lm_nslr$coef[-1]),
mean(coef.lm_islr$Intercept),
mean(coef.mm$Intercept))
rbind(`n-slr`=mean(lm_nslr$coef[-1]),
mean(coef.lm_islr$Intercept),
mean(coef.mm$Intercept))
rbind(`n-slr`=mean(lm_nslr$coef[-1]),
mean(`i-sle`=coef.lm_islr$Intercept),
mean(`mm`=coef.mm$Intercept))
rbind(`n-slr`=mean(lm_nslr$coef[-1]),
`i-slr`=mean(coef.lm_islr$Intercept),
`mm`=mean(coef.mm$Intercept))
knitr::kable(rbind(`n-slr`=mean(lm_nslr$coef[-1]),
`i-slr`=mean(coef.lm_islr$Intercept),
`mm`=mean(coef.mm$Intercept)))
blogdown:::serve_site()
ggplot(bs_data_p,
aes(x=N, y=Intercept,
fill=Subject))
ggplot(bs_data_p,
aes(x=N, y=Intercept,
fill=Subject)) +
scale_x_continuous(breaks = c(5:10)) +
facet_wrap(~Method) +
theme_bw()
blogdown:::new_post_addin()
# install.packages("lmerTest")
# install.packages("knitr")
# install.packages("dplyr")
# install.packages("ggplot2")
data("sleepstudy")
# Load packages
packs <- c("lmerTest", "knitr", "dplyr", "ggplot2")
lapply(packs, require, character.only = TRUE)
kable(head(sleepstudy))
# Change the data type of Days from number (continous) to factor (categorical)
sleepstudy$Days <- factor(as.character(sleepstudy$Days),
levels = unique(sleepstudy$Days))
levels(sleepstudy$Days)
# Fit the model
m <- lmer(Reaction ~ Days - 1 + ( 1 | Subject), data=sleepstudy)
summary(m)
coef(summary(m))
kable(coef(summary(m)))
group <- paste0(sleepstudy$Days)
group <- aggregate(model.matrix(m) ~ group, FUN=mean)
group
rownames(group) <- group$group
group
group[,-1]
group <- paste0(sleepstudy$Days)
group <- aggregate(model.matrix(m) ~ group, FUN=mean)
# group
rownames(group) <- group$group
(group <- group[,-1])
kable(group)
group["11",]
group["1",]
contrasts <- rbind(group["1",] - group["0",],
group["1",] - group["2",],
group["1",] - group["3",],
group["1",] - group["4",],
group["1",] - group["5",],
group["1",] - group["6",],
group["1",] - group["7",],
group["1",] - group["8",],
group["1",] - group["9",])
head(contrasts)
kable(head(contrasts))
kable((contrasts))
library(multcomp)
contrast.matrix <- rbind("Day 1 versus Day 0"=as.numeric(contrasts[1,]),
"Day 1 versus Day 2"=as.numeric(contrasts[2,]),
"Day 1 versus Day 3"=as.numeric(contrasts[3,]),
"Day 1 versus Day 4"=as.numeric(contrasts[4,]),
"Day 1 versus Day 5"=as.numeric(contrasts[5,]),
"Day 1 versus Day 6"=as.numeric(contrasts[6,]),
"Day 1 versus Day 7"=as.numeric(contrasts[7,]),
"Day 1 versus Day 8"=as.numeric(contrasts[8,]),
"Day 1 versus Day 9"=as.numeric(contrasts[9,]))
comparisons <- summary(glht(m, contrast.matrix))
comparisons
kable(comparisons)
comparisons
pq <- comparisons$test
mtests <- data.frame(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
error <- attr(pq$pvalues, "error")
pname <- switch(comparisons$alternativ,
less = paste("Pr(<",
ifelse(comparisons$df ==0, "z", "t"), ")",
sep = ""),
greater = paste("Pr(>",
ifelse(comparisons$df == 0, "z", "t"), ")",
sep = ""),
two.sided = paste("Pr(>|",
ifelse(comparisons$df == 0, "z", "t"), "|)"
, sep = ""))
colnames(mtests) <- c("Estimate", "Std.Error",
ifelse(comparisons$df ==0, "zvalue", "tvalue"), pname)
mtests <- mtests %>%
add_rownames("Parameters") %>%
mutate(`Pr(>|z|)`=ifelse(`Pr(>|z|)`< 0.001,
"< 0.001",
ifelse(`Pr(>|z|)` < 0.01,
"< 0.01",
ifelse(`Pr(>|z|)` < 0.05,
"< 0.05",
paste(round(`Pr(>|z|)`,
4)))))) %>%
mutate_if(is.numeric, funs(round(.,
digits=2)))
mtests <- mtests %>%
tibble::rownames_to_column("Parameters") %>%
mutate(`Pr(>|z|)`=ifelse(`Pr(>|z|)`< 0.001,
"< 0.001",
ifelse(`Pr(>|z|)` < 0.01,
"< 0.01",
ifelse(`Pr(>|z|)` < 0.05,
"< 0.05",
paste(round(`Pr(>|z|)`,
4)))))) %>%
mutate_if(is.numeric, funs(round(.,
digits=2)))
pname <- switch(comparisons$alternativ,
less = paste("Pr(<",
ifelse(comparisons$df ==0, "z", "t"), ")",
sep = ""),
greater = paste("Pr(>",
ifelse(comparisons$df == 0, "z", "t"), ")",
sep = ""),
two.sided = paste("Pr(>|",
ifelse(comparisons$df == 0, "z", "t"), "|)"
, sep = ""))
colnames(mtests) <- c("Estimate", "Std.Error",
ifelse(comparisons$df ==0, "zvalue", "tvalue"), pname)
mtests <- mtests %>%
tibble::rownames_to_column("Parameters") %>%
mutate(`Pr(>|z|)`=ifelse(`Pr(>|z|)`< 0.001,
"< 0.001",
ifelse(`Pr(>|z|)` < 0.01,
"< 0.01",
ifelse(`Pr(>|z|)` < 0.05,
"< 0.05",
paste(round(`Pr(>|z|)`,
4)))))) %>%
mutate_if(is.numeric, funs(round(.,
digits=2)))
mtests %>%
tibble::rownames_to_column("Parameters")
mtests
data.frame(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
comparisons$alternativ
comparisons$df
pname
colnames(mtests)
mtests
pq <- comparisons$test
mtests <- data.frame(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
error <- attr(pq$pvalues, "error")
pname <- switch(comparisons$alternativ,
less = paste("Pr(<",
ifelse(comparisons$df ==0, "z", "t"), ")",
sep = ""),
greater = paste("Pr(>",
ifelse(comparisons$df == 0, "z", "t"), ")",
sep = ""),
two.sided = paste("Pr(>|",
ifelse(comparisons$df == 0, "z", "t"), "|)"
, sep = ""))
colnames(mtests) <- c("Comparison", "Estimate", "Std.Error",
ifelse(comparisons$df ==0, "zvalue", "tvalue"), pname)
colnames(mtests)
colnames(mtests) <- c("Estimate", "Std.Error",
ifelse(comparisons$df ==0, "zvalue", "tvalue"), pname)
mtests
mtests %>%
tibble::rownames_to_column("Parameters")
mtests %>%
tibble::rownames_to_column("Comparison") %>%
mutate(`Pr(>|z|)`=ifelse(`Pr(>|z|)`< 0.001,
"< 0.001",
ifelse(`Pr(>|z|)` < 0.01,
"< 0.01",
ifelse(`Pr(>|z|)` < 0.05,
"< 0.05",
paste(round(`Pr(>|z|)`,
4)))))) %>%
mutate_if(is.numeric, funs(round(.,
digits=2)))
kable(mtests)
blogdown:::serve_site()
blogdown:::new_post_addin()
set.seed(88)
lunch <- sample(c(0,1), replace=TRUE, size=18)
sleepstudy$lunch <- factor(lunch)
kable(head(sleepstudy))
data("sleepstudy")
# Load packages
packs <- c("lmerTest", "knitr", "multcomp", "dplyr", "ggplot2")
lapply(packs, require, character.only = TRUE)
set.seed(88)
lunch <- sample(c(0,1), replace=TRUE, size=18)
sleepstudy$lunch <- factor(lunch)
kable(head(sleepstudy))
# Change the data type of Days from number (continous) to factor (categorical)
sleepstudy$Days <- factor(as.character(sleepstudy$Days),
levels = unique(sleepstudy$Days))
levels(sleepstudy$Days)
# Fit the model
m <- lmer(Reaction ~ Days*lunch - 1 + ( 1 | Subject), data=sleepstudy)
kable(coef(summary(m)))
group <- paste0(sleepstudy$Days, sleepstudy$lunch)
group <- aggregate(model.matrix(m) ~ group, FUN=mean)
# group
rownames(group) <- group$group
(group <- group[,-1])
kable(group)
kable(group)
kable(head(group))
blogdown:::serve_site()
contrasts <- rbind(group["01",] - group["00",],
group["11",] - group["10",],
group["21",] - group["20",],
group["31",] - group["30",],
group["41",] - group["40",],
group["51",] - group["50",],
group["61",] - group["60",],
group["71",] - group["70",],
group["81",] - group["80",],
group["91",] - group["90",])
kable(head(contrasts))
kable((contrasts))
group
contrasts <- rbind(group["00",] - group["01",],
group["11",] - group["10",],
group["21",] - group["20",],
group["31",] - group["30",],
group["41",] - group["40",],
group["51",] - group["50",],
group["61",] - group["60",],
group["71",] - group["70",],
group["81",] - group["80",],
group["91",] - group["90",])
kable((contrasts))
contrasts <- rbind(group["00",] - group["01",],
group["10",] - group["11",],
group["20",] - group["21",],
group["30",] - group["31",],
group["40",] - group["41",],
group["50",] - group["51",],
group["60",] - group["61",],
group["70",] - group["71",],
group["80",] - group["81",],
group["90",] - group["91",])
kable(head(contrasts))
# Transform into Matrix
contrast.matrix <- rbind("Lunch vs No Lunch on Day 0"=as.numeric(contrasts[1,]),
"Lunch vs No Lunch on Day 1"=as.numeric(contrasts[2,]),
"Lunch vs No Lunch on Day 2"=as.numeric(contrasts[3,]),
"Lunch vs No Lunch on Day 3"=as.numeric(contrasts[4,]),
"Lunch vs No Lunch on Day 4"=as.numeric(contrasts[5,]),
"Lunch vs No Lunch on Day 5"=as.numeric(contrasts[6,]),
"Lunch vs No Lunch on Day 6"=as.numeric(contrasts[7,]),
"Lunch vs No Lunch on Day 7"=as.numeric(contrasts[8,]),
"Lunch vs No Lunch on Day 8"=as.numeric(contrasts[8,]),
"Lunch vs No Lunch on Day 9"=as.numeric(contrasts[8,])
)
comparisons <- summary(glht(m, contrast.matrix))
comparisons
pq <- comparisons$test
mtests <- data.frame(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
error <- attr(pq$pvalues, "error")
pname <- switch(comparisons$alternativ,
less = paste("Pr(<",
ifelse(comparisons$df ==0, "z", "t"), ")",
sep = ""),
greater = paste("Pr(>",
ifelse(comparisons$df == 0, "z", "t"), ")",
sep = ""),
two.sided = paste("Pr(>|",
ifelse(comparisons$df == 0, "z", "t"), "|)"
, sep = ""))
colnames(mtests) <- c("Estimate", "Std.Error",
ifelse(comparisons$df ==0, "zvalue", "tvalue"), pname)
mtests <- mtests %>%
tibble::rownames_to_column("Comparison") %>%
mutate(`Pr(>|z|)`=ifelse(`Pr(>|z|)`< 0.001,
"< 0.001",
ifelse(`Pr(>|z|)` < 0.01,
"< 0.01",
ifelse(`Pr(>|z|)` < 0.05,
"< 0.05",
paste(round(`Pr(>|z|)`,
4)))))) %>%
mutate_if(is.numeric, funs(round(.,
digits=2)))
kable(mtests)
contrasts <- rbind(group["11",] - group["01",],
group["11",] - group["11",],
group["11",] - group["21",],
group["11",] - group["31",],
group["11",] - group["41",],
group["11",] - group["51",],
group["11",] - group["61",],
group["11",] - group["71",],
group["11",] - group["81",],
group["11",] - group["91",])
kable(head(contrasts))
contrast.matrix <- rbind("Lunch Day 0 vs Day 1"=as.numeric(contrasts[1,]),
"Lunch Day 1 vs Day 1"=as.numeric(contrasts[2,]),
"Lunch Day 2 vs Day 1"=as.numeric(contrasts[3,]),
"Lunch Day 3 vs Day 1"=as.numeric(contrasts[4,]),
"Lunch Day 4 vs Day 1"=as.numeric(contrasts[5,]),
"Lunch Day 5 vs Day 1"=as.numeric(contrasts[6,]),
"Lunch Day 6 vs Day 1"=as.numeric(contrasts[7,]),
"Lunch Day 7 vs Day 1"=as.numeric(contrasts[8,]),
"Lunch Day 8 vs Day 1"=as.numeric(contrasts[8,]),
"Lunch Day 9 vs Day 1"=as.numeric(contrasts[8,])
)
comparisons <- summary(glht(m, contrast.matrix))
comparisons
contrasts
contrasts <- rbind(group["11",] - group["01",],
group["11",] - group["21",],
group["11",] - group["31",],
group["11",] - group["41",],
group["11",] - group["51",],
group["11",] - group["61",],
group["11",] - group["71",],
group["11",] - group["81",],
group["11",] - group["91",])
kable(head(contrasts))
contrast.matrix <- rbind("Lunch Day 0 vs Day 1"=as.numeric(contrasts[1,]),
"Lunch Day 2 vs Day 1"=as.numeric(contrasts[3,]),
"Lunch Day 3 vs Day 1"=as.numeric(contrasts[4,]),
"Lunch Day 4 vs Day 1"=as.numeric(contrasts[5,]),
"Lunch Day 5 vs Day 1"=as.numeric(contrasts[6,]),
"Lunch Day 6 vs Day 1"=as.numeric(contrasts[7,]),
"Lunch Day 7 vs Day 1"=as.numeric(contrasts[8,]),
"Lunch Day 8 vs Day 1"=as.numeric(contrasts[8,]),
"Lunch Day 9 vs Day 1"=as.numeric(contrasts[8,])
)
comparisons <- summary(glht(m, contrast.matrix))
comparisons
pq <- comparisons$test
mtests <- data.frame(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
error <- attr(pq$pvalues, "error")
pname <- switch(comparisons$alternativ,
less = paste("Pr(<",
ifelse(comparisons$df ==0, "z", "t"), ")",
sep = ""),
greater = paste("Pr(>",
ifelse(comparisons$df == 0, "z", "t"), ")",
sep = ""),
two.sided = paste("Pr(>|",
ifelse(comparisons$df == 0, "z", "t"), "|)"
, sep = ""))
colnames(mtests) <- c("Estimate", "Std.Error",
ifelse(comparisons$df ==0, "zvalue", "tvalue"), pname)
mtests <- mtests %>%
tibble::rownames_to_column("Comparison") %>%
mutate(`Pr(>|z|)`=ifelse(`Pr(>|z|)`< 0.001,
"< 0.001",
ifelse(`Pr(>|z|)` < 0.01,
"< 0.01",
ifelse(`Pr(>|z|)` < 0.05,
"< 0.05",
paste(round(`Pr(>|z|)`,
4)))))) %>%
mutate_if(is.numeric, funs(round(.,
digits=2)))
kable(mtests)
