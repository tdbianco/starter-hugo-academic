install.packages("blogdown")
blogdown::install_hugo(force = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
set.seed(88) #set seed for replicability of randomly generated data
treatment <- c(rep("a", 10), rep("b", 10), rep("c", 10)) #3 groups: independent variable
response <- round(rnorm(30, mean = 80, sd = 12), digits = 2) #a normally distributed dependent variable
#various steps to put IV and DV together in a dataset, and format it
df <- cbind(treatment, response) #IV and DV in columns
df<-data.frame(df)
names(df)<-c("treatment", "response") #name the columns
df$treatment<-as.factor(df$treatment)
df$response<-as.numeric(df$response)
knitr::kable(head(df)) #preview first 6 rows
set.seed(88) #set seed for replicability of randomly generated data
treatment <- c(rep("a", 10), rep("b", 10), rep("c", 10)) #3 groups: independent variable
response <- round(rnorm(30, mean = 80, sd = 12), digits = 2) #a normally distributed dependent variable
#various steps to put IV and DV together in a dataset, and format it
df <- cbind(treatment, response) #IV and DV in columns
df<-data.frame(df)
names(df)<-c("treatment", "response") #name the columns
df$treatment<-as.factor(df$treatment)
df$response<-as.numeric(df$response)
knitr::kable(head(df)) #preview first 6 rows
wms
set.seed(88) #set seed for replicability of randomly generated data
treatment <- c(rep("a", 10), rep("b", 10), rep("c", 10)) #3 groups: independent variable
response <- round(rnorm(30, mean = 80, sd = 12), digits = 2) #a normally distributed dependent variable
#various steps to put IV and DV together in a dataset, and format it
df <- cbind(treatment, response) #IV and DV in columns
df<-data.frame(df)
names(df)<-c("treatment", "response") #name the columns
df$treatment<-as.factor(df$treatment)
df$response<-as.numeric(df$response)
knitr::kable(head(df)) #preview first 6 rows
# Group Means
m1<-with(df, mean(response[treatment=="a"]))
m2<-with(df, mean(response[treatment=="b"]))
m3<-with(df, mean(response[treatment=="c"]))
# Grand Mean
GM<-(m1+m2+m3)/3
#Within Sum of Squares and Within MS
wss <- sum((df$response-GM)^2)
wms <- wss/(nrow(df)-3)
#Between MS
bms<- (with(df, length(response[treatment=="a"])) * ((m1-GM)^2) +
+ with(df, length(response[treatment=="b"])) * (m2-GM)^2 +
+ with(df, length(response[treatment=="c"])) * (m3-GM)^2) / 3-1
#Print
cat("Within Group Variance:", round(wms, 2), "\n")
cat("Between Group Variance:", round(bms, 2))
aov<-aov(response~treatment, df)
s.aov<-summary(aov)
s.aov
knitr::kable(s.aov)
s.aov
knitr::kable(as.dataframe(s.aov))
knitr::kable(as.data.frame(s.aov))
broom::tidy(s.aov)
tidy(aov)
broom::tidy(aov)
knitr::kable(s.aov)
```{r, echo=TRUE}
aov<-aov(response~treatment, df)
s.aov<-broom::tidy(aov)
knitr::kable(s.aov)
```
s.aov<-broom::tidy(aov)
knitr::kable(s.aov)
m.t.means <- model.tables(aov, "mean", se=TRUE) #means
m.t.means
m.t.eff <- model.tables(aov, "effects", se=TRUE) #coefficients
m.t.eff
round(m.t.eff$tables$treatment[1], 2)
tidy.summ<-broom::tidy(aov)
knitr::kable(tidy.summ)
ifelse(tidy.summ$p.value[1]<0.05, "gave", "did not give")
paste0("F(", tidy.summ$df[1], ",", tidy.summ$df[2], ") = ", ifelse(round(tidy.summ$statistic[1], 2)==0, "< 0.001", round(tidy.summ$statistic[1], 2)), ", p-value = ", ifelse(tidy.summ$p.value[1]<0.001, paste0("p-value < 0.001"), round(tidy.summ$p.value[1], 2)))
sum_squares_treatment <- tidy.summ$sumsq[1]
sum_squares_residual <- tidy.summ$sumsq[2]
R_squared <- sum_squares_treatment /
(sum_squares_treatment + sum_squares_residual)
R_squared
paste0(round(R_squared, 2))
ifelse(round(R_squared, 2)>0.8, "big", ifelse(round(R_squared, 2)>0.5 & round(R_squared, 2)<0.5, "average", "small"))
ifelse(round(R_squared, 2)>0.8, "safe", ifelse(round(R_squared, 2)>0.5 & round(R_squared, 2)<0.5, "cautious", "careful"))
set.seed(88)
subj1<-rep(1:30)
group1<-rep("a", 30)
condition<-rep(c("y", "z"), 15)
response1<-round(rnorm(30, mean = 15, sd = 0.5), digits = 2)
subj2<-rep(31:60)
group2<-rep("b", 30)
condition<-rep(c("y", "z"), 15)
response2<-round(rnorm(30, mean = 18, sd = 0.7), digits = 2)
subj3<-rep(61:90)
group3<-rep("c", 30)
condition<-rep(c("y", "z"), 15)
response3<-round(rnorm(30, mean = 21, sd = 0.9), digits = 2)
fa_1<-cbind(subj1, group1, condition, response1)
fa_2<-cbind(subj2, group2, condition, response2)
fa_3<-cbind(subj3, group3, condition, response3)
fa<-rbind(fa_1, fa_2, fa_3)
fa.df<-as.data.frame(fa)
colnames(fa.df)<-c("subj", "treatment", "test", "response")
fa.df$response<-as.character(fa.df$response)
fa.df$response<-as.numeric(fa.df$response)
knitr::kable(head(fa.df))
av<-aov(response ~ treatment*test, fa.df)
tidy.summ <- broom::tidy(av)
knitr::kable(tidy.summ)
ifelse(tidy.summ$p.value[1]<0.05, "significant", "non-significant")
paste0("F(", tidy.summ$df[1], ",", tidy.summ$df[4], ") = ", ifelse(round(tidy.summ$statistic[1], 2)==0, "0.00", round(tidy.summ$statistic[1], 2))
)
paste0("F(", tidy.summ$df[1], ",", tidy.summ$df[4], ") = ", ifelse(round(tidy.summ$statistic[1], 2)==0, "0.00", round(tidy.summ$statistic[1], 2)), ifelse(tidy.summ$p.value[1]<0.001, paste0(", p-value < 0.001"), paste0(", p-value = ", round(tidy.summ$p.value[1], 2))))
ifelse(tidy.summ$p.value[2]<0.05, "significant", "non-significant")
paste0("F(", tidy.summ$df[2], ",", tidy.summ$df[4], ") = ", ifelse(round(tidy.summ$statistic[2], 2)==0, "0.00", round(tidy.summ$statistic[2], 2)), ifelse(tidy.summ$p.value[2]<0.001, paste0(", p-value < 0.001"), paste0(", p-value = ", round(tidy.summ$p.value[2], 2))))
ifelse(tidy.summ$p.value[3]<0.05, "significant", "non-significant")
ifelse(tidy.summ$p.value[1]<0.05, "made", "did not make")
ssq<-tidy.summ$sumsq
ES1<-ssq[1]/(ssq[1]+ssq[2]+ssq[3])
ES2<-ssq[2]/(ssq[1]+ssq[2]+ssq[3])
ES3<-ssq[3]/(ssq[1]+ssq[2]+ssq[3])
cat("eta-squared of treatment:", round(ES1, 3), "\n")
cat("eta-squared of test:", round(ES2, 3), "\n")
cat("eta-squared of interaction:", round(ES3, 3), "\n")
paste0(round(ES1, 3)*100, "%")
paste0(round(ES2, 4)*100, "%")
paste0(round(ES3, 3)*100, "%")
0.0003*100
round(ssq[4])
set.seed(88)
subj.r<-rep(1:30,2)
subj.r<-sort(subj.r)
treatment.r<-rep(c("a", "a", "b", "b"), 15)
test.r<-rep(c("y", "z"), 15)
response.r<-sample(round(rnorm(500, mean=8, sd=6), digits=3), 60)
rd.df<-as.data.frame(cbind(subj.r, treatment.r, test.r, response.r))
rd.df$response.r<-as.numeric(as.character(rd.df$response.r))
knitr::kable(head(rd.df))
r.av<-aov(response.r ~ treatment.r*test.r + Error(subj.r), data = rd.df)
summ.tidy.rr<-broom::tidy(r.av)
summ.tidy.rr.eff<-subset(summ.tidy.rr, term!="Residuals")
summ.tidy.rr.res<-subset(summ.tidy.rr, term=="Residuals", select = -c(statistic, p.value))
knitr::kable(summ.tidy.rr)
knitr::kable(summ.tidy.rr.eff)
knitr::kable(summ.tidy.rr.res)
p.eta.test <- summ.tidy.rr.eff$sumsq[2]/(summ.tidy.rr.eff$sumsq[2]+summ.tidy.rr.res$sumsq[2])
cat("Partial eta-squared (test):", round(p.eta.test, 2))
eta.test<-summ.tidy.rr.eff$sumsq[2]/(summ.tidy.rr.eff$sumsq[2]+summ.tidy.rr.res$sumsq[2]+summ.tidy.rr.res$sumsq[1])
cat("eta-squared (test):", round(eta.test, 2))
with(fa.df, interaction.plot(treatment, test, response))
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
knitr::kable(data.frame(x=1:6,
a="?",
b="?",
y=(1:6)*3+2.5))
ggplot2::ggplot(data = ChickWeight,
aes(x = Time,
y = cbind(resid(lr)))) +
geom_jitter(size = 3, col = "red", alpha = 0.5) +
labs(y = "Residuals",
title = "Residuals vs Time", subtitle = "Independence")
ggplot2::ggplot(data = ChickWeight,
+                 aes(x = Time,
+                     y = cbind(resid(lr)))) +
+     geom_jitter(size = 3, col = "red", alpha = 0.5) +
+     labs(y = "Residuals",
+          title = "Residuals vs Time", subtitle = "Independence")
lr_coll <- lm(Time~Diet, data=ChickWeight)
rsq <- summary(lr_coll)$r.squared
rsq
sqrt(rsq)
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
hugo mod clean
hugo mod tidy
blogdown:::serve_site()
blogdown:::serve_site()
hugo mod clean
blogdown:::serve_site()
blogdown:::serve_site()
hugo server
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
ci <- dplyr::add_rownames(data.frame(ci), "Term")
tibble::rownames_to_column(data.frame(ci), "Term")
set.seed(88)  # I set the seed when the generation of new data is involved
# otherwise the estimate will be different every time
ci <- confint(m1, method="boot", nsim=10)
# install.package("tibble")
ci <- tibble::rownames_to_column(data.frame(ci), "Term")
data("sleepstudy")
# install.packages("lmerTest")
# install.packages("ggplot2")
# install.packages("knitr")
library(lmerTest)
library(ggplot2)
library(knitr)
opts_template$set(figure_small = list(fig.height = 4, fig.width = 6))
m1 <- lmer(Reaction #this is the dependent variable
~ Days + #this is the fixed term: the effect we are mostly
# interested in!
( 1 + Days | Subject), #This expression means:
# each Subject has their baseline RT
# (intercept) and an individual variation
# of RT between Days (slope) --> varying
# intercept and slope
data=sleepstudy)
set.seed(88)  # I set the seed when the generation of new data is involved
# otherwise the estimate will be different every time
ci <- confint(m1, method="boot", nsim=10)
# install.package("tibble")
ci <- tibble::rownames_to_column(data.frame(ci), "Term")
colnames(ci) <- c("Term", "CI 2.5%", "CI 97.5%")
knitr::kable(ci[5:6,])
fe
coef(m1)$Subject
fe <- coef(m1)$Subject
fe <- add_rownames(data.frame(fe),"Subject")
fe <- tibble::rownames_to_column(data.frame(fe),"Subject")
fe$X.Intercept.
fixef(m1)[1]
fe <- coef(m1)$Subject
fe <- tibble::rownames_to_column(data.frame(fe),"Subject")
sub <- filter(sleepstudy, Subject=="309")
ggplot(data=sub, aes(x=Days, y=Reaction)) +
geom_jitter(size=2, alpha=0.5) +
geom_abline(intercept=fe$X.Intercept.[1],
slope=fe$Days[1]) +
geom_abline(intercept=fixef(m1)[1],
slope=fixef(m1)[2], linetype="dashed") +
labs(title="Observations and RL of Subject 308 compared to the Avg RL",
caption="____ Individual Regression Line - - - - Avg Regression Line") +
scale_x_continuous(breaks = c(0,2,4,6,8))
sub <- filter(sleepstudy, Subject=="309")
fe <- coef(m1)$Subject
fe <- tibble::rownames_to_column(data.frame(fe),"Subject")
fe
subset(sleepstudy, Subject=="309")
fe
ggplot(data=sub, aes(x=Days, y=Reaction)) +
geom_jitter(size=2, alpha=0.5) +
geom_abline(intercept=fe$X.Intercept.[2],
slope=fe$Days[2]) +
geom_abline(intercept=fixef(m1)[1],
slope=fixef(m1)[2], linetype="dashed") +
labs(title="Observations and RL of Subject 308 compared to the Avg RL",
caption="____ Individual Regression Line - - - - Avg Regression Line") +
scale_x_continuous(breaks = c(0,2,4,6,8))
sub <- subset(sleepstudy, Subject=="309")
ggplot(data=sub, aes(x=Days, y=Reaction)) +
geom_jitter(size=2, alpha=0.5) +
geom_abline(intercept=fe$X.Intercept.[2],
slope=fe$Days[2]) +
geom_abline(intercept=fixef(m1)[1],
slope=fixef(m1)[2], linetype="dashed") +
labs(title="Observations and RL of Subject 308 compared to the Avg RL",
caption="____ Individual Regression Line - - - - Avg Regression Line") +
scale_x_continuous(breaks = c(0,2,4,6,8))
fixef(m1)[1]
ggplot(data=sub, aes(x=Days, y=Reaction)) +
geom_jitter(size=2, alpha=0.5) +
geom_abline(intercept=fe$X.Intercept.[2],
slope=fe$Days[2]) +
geom_abline(intercept=fixef(m1)[1],
slope=fixef(m1)[2], linetype="dashed") +
labs(title="Observations and RL of Subject 309 compared to the Avg RL",
caption="____ Individual Regression Line - - - - Avg Regression Line") +
scale_x_continuous(breaks = c(0,2,4,6,8)) +
ylim(200,250)
ggplot(data=sub, aes(x=Days, y=Reaction)) +
geom_jitter(size=2, alpha=0.5) +
geom_abline(intercept=fe$X.Intercept.[2],
slope=fe$Days[2]) +
geom_abline(intercept=fixef(m1)[1],
slope=fixef(m1)[2], linetype="dashed") +
labs(title="Observations and RL of Subject 309 compared to the Avg RL",
caption="____ Individual Regression Line - - - - Avg Regression Line") +
scale_x_continuous(breaks = c(0,2,4,6,8)) +
ylim(200,300)
blogdown:::serve_site()
